'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Textarea } from '@/components/ui/textarea'
import { Shield, AlertTriangle, CheckCircle, Upload, Zap } from 'lucide-react'
import Link from 'next/link'

export default function DetectorPage() {
  const [text, setText] = useState('')
  const [isAnalyzing, setIsAnalyzing] = useState(false)
  const [result, setResult] = useState<{
    aiProbability: number
    humanProbability: number
    confidence: number
    analysis: string[]
  } | null>(null)

  const handleAnalyze = async () => {
    if (!text.trim()) return

    setIsAnalyzing(true)
    
    // Simulate API call
    setTimeout(() => {
      const aiProb = Math.random() * 100
      const humanProb = 100 - aiProb
      
      setResult({
        aiProbability: Math.round(aiProb),
        humanProbability: Math.round(humanProb),
        confidence: Math.round(70 + Math.random() * 30),
        analysis: [
          'Text complexity analysis completed',
          'Sentence structure patterns evaluated',
          'Vocabulary distribution assessed',
          'Writing style consistency checked'
        ]
      })
      setIsAnalyzing(false)
    }, 3000)
  }

  const getResultColor = (aiProb: number) => {
    if (aiProb < 30) return 'text-green-600'
    if (aiProb < 70) return 'text-yellow-600'
    return 'text-red-600'
  }

  const getResultIcon = (aiProb: number) => {
    if (aiProb < 30) return <CheckCircle className="h-6 w-6 text-green-600" />
    if (aiProb < 70) return <AlertTriangle className="h-6 w-6 text-yellow-600" />
    return <Shield className="h-6 w-6 text-red-600" />
  }

  const getResultMessage = (aiProb: number) => {
    if (aiProb < 30) return 'Likely human-written'
    if (aiProb < 70) return 'Mixed or uncertain origin'
    return 'Likely AI-generated'
  }

  return (
    <div className="p-8">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">AI Content Detector</h1>
          <p className="text-gray-600">
            Analyze text to determine if it was generated by AI or written by humans.
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Input Section */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Shield className="h-5 w-5 mr-2" />
                Text to Analyze
              </CardTitle>
              <CardDescription>
                Paste the text you want to analyze for AI detection
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <Textarea
                placeholder="Paste your text here..."
                value={text}
                onChange={(e) => setText(e.target.value)}
                className="min-h-[300px] resize-none"
              />
              
              <div className="flex items-center justify-between text-sm text-gray-500">
                <span>{text.length} characters</span>
                <span>{text.trim().split(/\s+/).filter(word => word.length > 0).length} words</span>
              </div>

              <div className="flex space-x-3">
                <Button
                  onClick={handleAnalyze}
                  disabled={!text.trim() || isAnalyzing}
                  className="flex-1"
                >
                  {isAnalyzing ? (
                    <>
                      <Zap className="h-4 w-4 mr-2 animate-spin" />
                      Analyzing...
                    </>
                  ) : (
                    <>
                      <Shield className="h-4 w-4 mr-2" />
                      Analyze Text
                    </>
                  )}
                </Button>
                
                <Button variant="outline">
                  <Upload className="h-4 w-4 mr-2" />
                  Upload File
                </Button>
              </div>
            </CardContent>
          </Card>

          {/* Results Section */}
          <Card>
            <CardHeader>
              <CardTitle>Detection Results</CardTitle>
              <CardDescription>
                AI detection analysis and confidence metrics
              </CardDescription>
            </CardHeader>
            <CardContent>
              {!result ? (
                <div className="flex items-center justify-center h-[300px] text-gray-500">
                  <div className="text-center">
                    <Shield className="h-12 w-12 mx-auto mb-4 opacity-50" />
                    <p>Enter text and click "Analyze Text" to see results</p>
                  </div>
                </div>
              ) : (
                <div className="space-y-6">
                  {/* Main Result */}
                  <div className="text-center p-6 bg-gray-50 rounded-lg">
                    <div className="flex items-center justify-center mb-3">
                      {getResultIcon(result.aiProbability)}
                    </div>
                    <h3 className={`text-xl font-semibold mb-2 ${getResultColor(result.aiProbability)}`}>
                      {getResultMessage(result.aiProbability)}
                    </h3>
                    <p className="text-gray-600 text-sm">
                      Confidence: {result.confidence}%
                    </p>
                  </div>

                  {/* Probability Breakdown */}
                  <div className="space-y-4">
                    <div>
                      <div className="flex justify-between items-center mb-2">
                        <span className="text-sm font-medium text-red-600">AI Generated</span>
                        <span className="text-sm font-medium">{result.aiProbability}%</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-red-500 h-2 rounded-full" 
                          style={{ width: `${result.aiProbability}%` }}
                        />
                      </div>
                    </div>

                    <div>
                      <div className="flex justify-between items-center mb-2">
                        <span className="text-sm font-medium text-green-600">Human Written</span>
                        <span className="text-sm font-medium">{result.humanProbability}%</span>
                      </div>
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-green-500 h-2 rounded-full" 
                          style={{ width: `${result.humanProbability}%` }}
                        />
                      </div>
                    </div>
                  </div>

                  {/* Analysis Details */}
                  <div>
                    <h4 className="font-medium mb-2">Analysis Details</h4>
                    <ul className="space-y-1 text-sm text-gray-600">
                      {result.analysis.map((item, index) => (
                        <li key={index} className="flex items-center">
                          <CheckCircle className="h-3 w-3 text-green-500 mr-2" />
                          {item}
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>
        </div>

        {/* Additional Tools */}
        <div className="mt-8">
          <Card>
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="font-semibold mb-1">Need to humanize AI content?</h3>
                  <p className="text-sm text-gray-600">
                    Make AI-generated text sound more natural and human-like.
                  </p>
                </div>
                <Link href="/app/humanizer">
                  <Button>
                    <Zap className="h-4 w-4 mr-2" />
                    Try Humanizer
                  </Button>
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
} 